name: snap
on:
  push:
    branches:
      - noetic-devel
  pull_request:
    branches:
      - noetic-devel
  workflow_dispatch:
  workflow_call:

jobs:
  snap:
    uses: ubuntu-robotics/snap_workflows/.github/workflows/build-install-test-snap.yaml@main
    with:
      ubuntu-image: ubuntu-20.04
      branch-name: noetic-devel
      snap-name: turtlebot3c
      snap-install-args: --devmode
      test-script: |
                    #!/bin/bash

                    ## Install ROS
                    sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'

                    sudo apt install curl
                    curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -
                    sudo apt update
                    sudo apt install ros-noetic-desktop-full
                    sudo apt install ros-noetic-turtlebot3-gazebo

                    source /opt/ros/noetic/setup.sh

                    ## set gui arg to false with sed since the arg is not exposed
                    sed -i "s/\(<arg name=\"gui\" value=\"\).*\(\"\/>\)/\1false\2/" /opt/ros/noetic/share/turtlebot3_gazebo/launch/turtlebot3_empty_world.launch

                    ## Launch turtlebot simulation
                    TURTLEBOT3_MODEL=waffle_pi roslaunch turtlebot3_gazebo turtlebot3_world.launch &
                    pid=$!

                    sudo snap set turtlebot3c simulation=true

                    sleep 5

                    check_existence() {
                        local topic_or_node=$1
                        local name=$2
                        $1 list | grep -q "/$name"
                        if [ $? -eq 0 ]; then
                            echo "$name is running."
                        else
                            sleep 5
                            echo "Error $name is not running."
                            sudo snap stop turtlebot3c
                            killall -9 rosmaster
                            exit 1
                        fi
                    }

                    ## test core robot_state_publisher
                    check_existence rosnode robot_state_publisher

                    ## test mapping node
                    sudo snap start turtlebot3c.mapping
                    sleep 5
                    check_existence rosnode turtlebot3_slam_gmapping
                    check_existence rostopic map
                    sudo snap stop turtlebot3c.mapping

                    ## test navigation node
                    sudo snap start turtlebot3c.navigation
                    sleep 3
                    check_existence rosnode move_base
                    check_existence rostopic nav_vel
                    sudo snap stop turtlebot3c.navigation

                    kill $pid
                    sudo snap stop turtlebot3c
                    killall -9 rosmaster
