#!/bin/sh -e

SIMULATION="$(snapctl get simulation)"
case "${SIMULATION}" in
	"true") ;;
	"false") ;;
	"0") ;;
	"1") ;;
	*)
		logger -t "${SNAP_NAME}" "'${SIMULATION}' is not a supported value for simulation." \
      "Possible values are true, false, 0, 1"
		return 1
		;;
esac

LDS_MODEL="$(snapctl get lds-model)"
case "${LDS_MODEL}" in
	"LDS-01") ;;
	"LDS-02") ;;
	*)
		logger -t "${SNAP_NAME}" "'${LDS_MODEL}' is not a supported value for lds_model." \
      "Possible values are LDS-01 and LDS-02"
		return 1
		;;
esac

TURTLEBOT3_MODEL="$(snapctl get turtlebot3-model)"
case "${TURTLEBOT3_MODEL}" in
	"burger") ;;
	"waffle") ;;
	"waffle_pi") ;;
	*)
		logger -t "${SNAP_NAME}" "'${TURTLEBOT3_MODEL}' is not a supported value for turtlebot3-model." \
      "Possible values are burger, waffle and waffle_pi"
		return 1
		;;
esac

OPENCR_PORT=$(snapctl get opencr-port)
if echo "${OPENCR_PORT}" | grep -q ^/dev/tty; then
  logger -t "${SNAP_NAME}" "opencr-port is now set to ${OPENCR_PORT}."
else
  logger -t "${SNAP_NAME}" "${OPENCR_PORT} is not a supported value for opencr-port."\
      "Possible values are starting with /dev/tty."
fi

OPENCR_AUTO_UPDATE="$(snapctl get opencr-auto-update)"
case "${OPENCR_AUTO_UPDATE}" in
	"true") ;;
	"false") ;;
	*)
		logger -t "${SNAP_NAME}" "'${OPENCR_AUTO_UPDATE}' is not a supported value for opencr-auto-update." \
      "Possible values are true or false."
		return 1
		;;
esac

